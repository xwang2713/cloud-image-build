#!/bin/bash

export codename=jammy
export arch=amd64
export pkgType=deb
export now=$(date -u +%Y%m%d-%H%M)

DEBIAN_FRONTEND=noninteractive
UCF_FORCE_CONFFNEW=true
export UCF_FORCE_CONFFNEW DEBIAN_FRONTEND

echo "wait 180"
sleep 180
echo "done waiting"

#sudo apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confnew" dist-upgrade
sudo  rm -rf /var/lib/apt/lists/*
sudo apt-get clean
sudo apt-get update -y

sudo mkdir -p /tmp
sudo chmod -R 777 /tmp

echo "Build Tools - Mono  ---"
sudo apt install -y dirmngr gnupg apt-transport-https ca-certificates software-properties-common
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
sudo sh -c 'echo "deb https://download.mono-project.com/repo/ubuntu stable-bionic main" > /etc/apt/sources.list.d/mono-official-stable.list'
sudo apt update
sudo apt install -y mono-complete

echo "Build Tools  ---"
sudo apt install -y git curl zip unzip tar
sudo apt install -y build-essential \
         autoconf         \
         libtool          \
         gettext          \
         gcc-11-locales   \
         debian-keyring   \
         g++-multilib     \
         g++-11-multilib  \
         gcc-multilib     \
         gcc-11-multilib  \
         flex             \
         bison            \
         --fix-missing

echo "Libraries  ---"
sudo apt install -y libncurses-dev     \
         default-jdk                   \
         cmake                         \
         python3-dev                   \
         libpython3-dev                \
         default-libmysqlclient-dev    \
         libsqlite3-dev                \
         libmemcached-dev              \
         libnuma-dev                   \
         r-base                        \
         r-cran-rcpp                   \
         r-cran-rinside                \
         r-cran-inline                 \
         libbsd-dev                    \
         uuid-dev                      \
         --fix-missing

sudo apt install -y  libcurl4-openssl-dev \
                libevent-dev            \
                fop                     \
                xsltproc                \
                libsaxonb-java          \
                --fix-missing

dpkg -l | grep bsd
dpkg -l | grep uuid

echo "Installing Nodejs"
sudo apt --fix-broken install -y
sudo apt update -y
sudo apt remove -y nodejs
sudo apt remove -y nodejs-doc
#sudo apt remove -y libnode-dev
curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -
sudo apt-get install -y nodejs
echo "Check npm ..."
which npm

# Setup Jenkins
sudo mkdir -p /var/lib/jenkins/workspace
sudo chown -R ubuntu:ubuntu /var/lib/jenkins
sudo ln -s /var/lib/jenkins /jenkins

echo "Install AWS Cli"
curl -O https://bootstrap.pypa.io/get-pip.py
sudo python3 get-pip.py
sudo pip3 install awscli --upgrade
rm -rf get-pip.py

echo "Import gpg key"
aws s3 cp s3://@S3_BUCKET@/HPCCSystems.priv .
gpg --pinentry-mode=loopback --passphrase @GPG_PASSPHRASE@  --import HPCCSystems.priv
rm -rf HPCCSystems.priv

# VCPKG
WORKDIR=$(pwd)/hpcc-dev
mkdir -p ${WORKDIR}
echo "WORKDIR: $WORKDIR"
cd ${WORKDIR}
git clone -n https://github.com/hpcc-systems/vcpkg.git
BUILD_BRANCH=hpcc-platform-8.8.x
cd ${WORKDIR}/vcpkg
git checkout ${BUILD_BRANCH}
./bootstrap-vcpkg.sh

GITHUB_ACTOR=hpcc-systems
GITHUB_TOKEN=none
mono `${WORKDIR}/vcpkg/vcpkg fetch nuget | tail -n 1` \
  sources add \
  -name "GitHub" \
  -source "https://nuget.pkg.github.com/hpcc-systems/index.json" \
  -storepasswordincleartext \
  -username "${GITHUB_ACTOR}" \
  -password "${GITHUB_TOKEN}"

mono `${WORKDIR}/vcpkg/vcpkg fetch nuget | tail -n 1` \
  setapikey "${GITHUB_TOKEN}" \
  -source "https://nuget.pkg.github.com/hpcc-systems/index.json"

mkdir -p ${WORKDIR}/build
cd ${WORKDIR}/build

${WORKDIR}/vcpkg/vcpkg install \
  --clean-after-build \
  --overlay-ports=${WORKDIR}/vcpkg/overlays \
  --x-manifest-root=${WORKDIR}/vcpkg \
  --downloads-root=${WORKDIR}/build/vcpkg_downloads \
  --x-buildtrees-root=${WORKDIR}/build/vcpkg_buildtrees \
  --x-packages-root=${WORKDIR}/build/vcpkg_packages

#echo "Check icu error log"
#echo "cat /home/ec2-user/hpcc-dev/build/vcpkg_buildtrees/icu/autoconf-x64-linux-err.log"
#cat /home/ec2-user/hpcc-dev/build/vcpkg_buildtrees/icu/autoconf-x64-linux-err.log

mono `${WORKDIR}/vcpkg/vcpkg fetch nuget | tail -n 1` \
  sources remove \
  -name "GitHub"
