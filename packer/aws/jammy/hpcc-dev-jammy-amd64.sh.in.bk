#!/bin/bash

export codename=jammy
export arch=amd64
export pkgType=deb
export now=$(date -u +%Y%m%d-%H%M)

DEBIAN_FRONTEND=noninteractive
UCF_FORCE_CONFFNEW=true
export UCF_FORCE_CONFFNEW DEBIAN_FRONTEND

echo "wait 180"
sleep 180
echo "done waiting"

#sudo apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confnew" dist-upgrade
sudo  rm -rf /var/lib/apt/lists/*
sudo apt-get clean
sudo apt-get update
sudo apt-get update

sleep 10

sudo apt-get install -y unzip


echo "Installing HPCC build prerequisites"

sudo apt-get install -y \
                 g++                   \
                 gcc                   \
                 curl                  \
                 libfreetype6-dev      \
                 zip                   \
                 lsb-release           \
                 make                  \
                 --fix-missing         

echo "Installing Nodejs"
sudo apt --fix-broken install -y
sudo apt update -y
sudo apt remove -y nodejs 
sudo apt remove -y nodejs-doc 
sudo apt remove -y libnode-dev
curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -
sudo apt-get install -y nodejs
echo "Check npm ..."
which npm

sudo apt-get install -y \
                 git                   \
                 build-essential       \
                 binutils-dev          \
                 libldap2-dev          \
                 libcppunit-dev        \
                 libicu-dev            \
                 libxslt1-dev          \
                 zlib1g-dev            \
                 bison                 \
                 flex                  \
                 --fix-missing         



sudo apt-get install -y \
                 libboost-regex-dev    \
                 libarchive-dev        \
                 libv8-dev             \
                 default-jdk           \
                 libapr1-dev           \
                 libaprutil1-dev       \
                 libiberty-dev         \
                 libhiredis-dev        \
                 libtbb-dev            \
                 libxalan-c-dev        \
                 libnuma-dev           \
                 libevent-dev          \
                 libsqlite3-dev        \
                 libmemcached-dev      \
                 libboost-thread-dev   \
                 libboost-filesystem-dev \
                 libmysqlclient-dev    \
                 pkg-config            \
                 --fix-missing         

sudo apt-get install -y \
                 libtool               \
                 autotools-dev         \
                 automake              \
                 m4                    \
                 fop                   \
                 xsltproc              \
                 libsaxonb-java        \
                 libatlas-base-dev     \
                 libbsd-dev            \
                 libssl-dev            \
                 libcurl4-openssl-dev  \
                 cmake                 \
                 python3-dev           \
                 libgtk2.0-dev         \
                 libcurl4-gnutls-dev   \
                --fix-missing         

##libssl-dev            \
#sudo dpkg-reconfigure libc6 && \
#export DEBIAN_FRONTEND=noninteractive && \
#sudo -E apt-get -q --option "Dpkg::Options::=--force-confold" --assume-yes install libssl-dev


#sudo apt-get install -y python2.7-dev --fix-missing
#sudo apt-get install -y python3-dev --fix-missing
#sudo apt-get install -y libgtk2.0-dev --fix-missing
#sudo apt-get install -y libcurl4-gnutls-dev --fix-missing
#sudo apt-get install -y bison --fix-missing
#sudo apt-get install -y flex --fix-missing


echo "Installing R"
sudo apt-get install -y r-base r-cran-rcpp r-cran-rinside r-cran-inline
#export RInside_package=RInside_0.2.14.tar.gz
#wget https://cran.r-project.org/src/contrib/Archive/RInside/${RInside_package}
#sudo R CMD INSTALL ${RInside_package}
#rm -rf ${RInside_package}

#echo "Get expected CMake"
#export cmake_version=3.22.1
#export cmake_name=cmake-${cmake_version}-Linux-x86_64
#wget https://github.com/Kitware/CMake/releases/download/v${cmake_version}/${cmake_name}.tar.gz
#tar -zxf ${cmake_name}.tar.gz
#rm -rf ${cmake_name}.tar.gz

##cd ${cmake_name}
##./bootstrap
##make && sudo make install
##cd ..
#cmake_name=$(echo $cmake_name | tr '[:upper:]' '[:lower:]')
#sudo cp -r ${cmake_name}/* /usr/local/
#rm -rf ${cmake_name}

# Setup Jenkins
sudo mkdir -p /var/lib/jenkins/workspace
sudo chown -R ubuntu:ubuntu /var/lib/jenkins
sudo ln -s /var/lib/jenkins /jenkins

echo "Install AWS Cli"
curl -O https://bootstrap.pypa.io/get-pip.py
sudo python3 get-pip.py
sudo pip3 install awscli --upgrade
rm -rf get-pip.py

echo "Import gpg key"
aws s3 cp s3://@S3_BUCKET@/HPCCSystems.priv .
gpg --pinentry-mode=loopback --passphrase @GPG_PASSPHRASE@  --import HPCCSystems.priv
rm -rf HPCCSystems.priv
