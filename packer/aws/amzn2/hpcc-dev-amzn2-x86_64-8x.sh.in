#!/bin/bash

export codename=amzn2
export arch=x86_64
export pkgType=rpm
export now=$(date -u +%Y%m%d-%H%M)

echo "wait 180"
sleep 180
echo "done waiting"

sudo yum update
sudo amazon-linux-extras install -y epel
sudo yum-config-manager --enable epel

sudo yum install -y yum-utils
sudo rpm --import "http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF"
sudo yum-config-manager --add-repo http://download.mono-project.com/repo/centos/
sudo yum clean all
sudo yum makecache
sudo yum groupinstall -y "Development Tools"

#sudo yum -y install https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm

sudo yum install -y mono-complete 
which mono
mono --version


sudo yum install -y git curl zip unzip wget 
#sudo yum install -y gcc10.x86_64 gcc10-c++.x86_64 
#gcc --version
echo "Install devtoolset-9"
sudo yum-config-manager --add-repo http://mirror.centos.org/centos/7/sclo/x86_64/rh/
sudo yum install -y centos-release-scl
LIBGFORTRAN5=libgfortran5-8.3.1-2.1.1.el7.x86_64.rpm
wget http://mirror.centos.org/centos/7/os/x86_64/Packages/${LIBGFORTRAN5}
sudo yum install -y ${LIBGFORTRAN5}
rm -rf ${LIBGFORTRAN5}
sudo yum install -y devtoolset-9 --nogpgcheck
source /opt/rh/devtoolset-9/enable
which gcc
gcc --version
sudo sh -c 'echo "source /opt/rh/devtoolset-9/enable" >> /etc/bashrc'



wget https://pkg-config.freedesktop.org/releases/pkg-config-0.29.2.tar.gz
tar xvfz pkg-config-0.29.2.tar.gz
cd pkg-config-0.29.2
./configure --prefix=/usr/local/pkg_config/0_29_2 --with-internal-glib
make -j4
sudo make install
sudo ln -s /usr/local/pkg_config/0_29_2/bin/pkg-config /usr/local/bin/
sudo mkdir -p /usr/local/share/aclocal
sudo ln -s /usr/local/pkg_config/0_29_2/share/aclocal/pkg.m4 /usr/local/share/aclocal/
sudo sh -c 'echo "export LD_LIBRARY_PATH=/usr/local/lib:${LD_LIBRARY_PATH}" >> /etc/profile'
sudo sh -c 'echo "export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:${PKG_CONFIG_PATH}" >> /etc/profile'
sudo sh -c 'echo "export ACLOCAL_PATH=/usr/local/share/aclocal:${ACLOCAL_PATH}" >> /etc/profile'
source /etc/profile
cd ..


# Choose of the one of following for nodejs and cmake
echo "Installing Nodejs"
curl --silent --location https://rpm.nodesource.com/setup_16.x | sudo bash -
sudo yum install -y nodejs

echo "Get expected CMake"
export cmake_version=3.23.2
export cmake_name=cmake-${cmake_version}-Linux-x86_64
wget https://github.com/Kitware/CMake/releases/download/v${cmake_version}/${cmake_name}.tar.gz
tar -zxf ${cmake_name}.tar.gz
rm -rf ${cmake_name}.tar.gz
cmake_name=$(echo $cmake_name | tr '[:upper:]' '[:lower:]')
sudo cp -r ${cmake_name}/* /usr/local/
rm -rf ${cmake_name}

#. <(curl https://aka.ms/vcpkg-init.sh -L)
#. ~/.vcpkg/vcpkg-init fetch cmake
#sudo ln -s `. ~/.vcpkg/vcpkg-init fetch cmake | tail -n 1` /usr/local/bin/
#sudo ln -s `. ~/.vcpkg/vcpkg-init fetch node | tail -n 1` /usr/local/bin/
#sudo ln -s `. ~/.vcpkg/vcpkg-init fetch node | tail -n 1 | sed -e 's!bin/node!bin/npm!g'` /usr/local/bin/

echo "Check cmake node and npm"
which cmake
which node
which npm

# Libs
sudo yum install -y \
	libcurl-devel \
        openssl-devel         \
        openldap-devel        \
        libffi-devel         \
        libevent-devel         \
	libmemcached-devel \
	heimdal-devel \
        numactl-devel \
	sqlite-devel  \
	libicu-devel  \
	uuid-devel \
	libuuid-devel \
	ncurses-devel


# Doesn't work
#sudo yum install -y v8-devel

#echo "Install JDK 11"
JDK11=amazon-corretto-11-x64-al2-jdk.rpm
wget https://corretto.aws/downloads/latest/${JDK11}
sudo yum install -y ${JDK11}
rm -rf ${JDK11}
which java
java -version
which jar


echo "Python3 devel"
sudo yum install -y python3-devel
which python3
python3 --version
echo "pip3 version"
which pip3
pip3 --version

wget http://mysql.mirrors.hoobly.com/Downloads/MySQL-5.6/MySQL-devel-5.6.44-1.el7.x86_64.rpm
sudo yum install -y MySQL-devel-5.6.44-1.el7.x86_64.rpm
rm -rf MySQL-devel-5.6.44-1.el7.x86_64.rpm 


echo "Installing R"
sudo yum install -y R-core-devel
export Rcpp_package=Rcpp_0.12.19.tar.gz
wget https://cran.r-project.org/src/contrib/Archive/Rcpp/${Rcpp_package}
sudo R CMD INSTALL ${Rcpp_package}
rm -rf ${Rcpp_package}

export RInside_package=RInside_0.2.12.tar.gz
wget https://cran.r-project.org/src/contrib/Archive/RInside/${RInside_package}
sudo R CMD INSTALL ${RInside_package}
rm -rf ${RInside_package}


# Setup Jenkins
sudo mkdir -p /var/lib/jenkins/workspace
sudo chown -R ec2-user:ec2-user /var/lib/jenkins
sudo ln -s /var/lib/jenkins /jenkins

echo "Install AWS Cli"
#sudo /opt/rh/rh-python36/root/usr/bin/pip3 install awscli --upgrade
#sudo pip3 install awscli --upgrade
sudo pip3 install awscli --upgrade

echo "Import gpg key"
aws s3 cp s3://@S3_BUCKET@/HPCCSystems.priv .
gpg --passphrase @GPG_PASSPHRASE@  --import HPCCSystems.priv
rm -rf HPCCSystems.priv

# Set Enviornment Variables for build
export ACLOCAL_PATH=/usr/local/share/aclocal:$ACLOCAL_PATH
export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH

# VCPKG
WORKDIR=$(pwd)/hpcc-dev
mkdir -p ${WORKDIR}
echo "WORKDIR: $WORKDIR"
cd ${WORKDIR}
git clone -n https://github.com/hpcc-systems/vcpkg.git
BUILD_BRANCH=hpcc-platform-8.8.x
cd ${WORKDIR}/vcpkg
git checkout ${BUILD_BRANCH}
./bootstrap-vcpkg.sh

GITHUB_ACTOR=hpcc-systems
GITHUB_TOKEN=none
mono `${WORKDIR}/vcpkg/vcpkg fetch nuget | tail -n 1` \
    sources add \
    -name "GitHub" \
    -source "https://nuget.pkg.github.com/hpcc-systems/index.json" \
    -storepasswordincleartext \
    -username "${GITHUB_ACTOR}" \
    -password "${GITHUB_TOKEN}"

mono `${WORKDIR}/vcpkg/vcpkg fetch nuget | tail -n 1` \
    setapikey "${GITHUB_TOKEN}" \
    -source "https://nuget.pkg.github.com/hpcc-systems/index.json"

mkdir -p ${WORKDIR}/build
cd ${WORKDIR}/build

${WORKDIR}/vcpkg/vcpkg install \
  --clean-after-build \
  --overlay-ports=${WORKDIR}/vcpkg/overlays \
  --x-manifest-root=${WORKDIR}/vcpkg \
  --downloads-root=${WORKDIR}/build/vcpkg_downloads \
  --x-buildtrees-root=${WORKDIR}/build/vcpkg_buildtrees \
  --x-packages-root=${WORKDIR}/build/vcpkg_packages

#echo "Show ${WORKDIR}/build/vcpkg_buildtrees/libxslt/autoconf-x64-linux-err.log"
#cat ${WORKDIR}/build/vcpkg_buildtrees/libxslt/autoconf-x64-linux-err.log

#echo "Check icu error log"
#echo "cat /home/ec2-user/hpcc-dev/build/vcpkg_buildtrees/icu/autoconf-x64-linux-err.log"
#cat /home/ec2-user/hpcc-dev/build/vcpkg_buildtrees/icu/autoconf-x64-linux-err.log

mono `${WORKDIR}/vcpkg/vcpkg fetch nuget | tail -n 1` \
    sources remove \
    -name "GitHub"


# reinstall newer libtool
# vcpkg build XLST can't find this libtool
echo "uninstall libtool"
sudo rpm -e libtool-2.4.2-22.2.amzn2.0.2.x86_64
sudo rpm -qa | grep libtool || true

wget http://ftp.jaist.ac.jp/pub/GNU/libtool/libtool-2.4.6.tar.gz
tar xvfz libtool-2.4.6.tar.gz
cd libtool-2.4.6
 ./configure --prefix=/usr/local/libtool/2_4_6
make
sudo make install
cd ..
rm -rf libtool-2.4.6*
